import matplotlib.pyplot as plt

S = SymmetricGroup(7)
tsg = filter(lambda s: s.is_transitive(), S.subgroups())
final_tsg = []

for tg in tsg:
    should_add = True
    for g2 in final_tsg:
        if tg.is_isomorphic(g2):
            should_add = False
            break
    if should_add:
        final_tsg.append(tg)

transitive_groups = final_tsg

cycles = [dict() for _ in range(7)]
for i in range(7):
    G = transitive_groups[i].list()
    for a in G:
        b = a.cycle_tuples()
        b = map(len, b)
        b.sort()
        b = tuple(b)
        if b not in cycles[i]:
            cycles[i][b] = 0
        cycles[i][b] += 1

for i in range(7):
    G = transitive_groups[i].list()
    l = len(G)
    for e in cycles[i]:
        cycles[i][e] = cycles[i][e] / l

cs = set()
for i in range(7):
    cs = cs.union(set(cycles[i].keys()))

for i in range(7):
    for c in cs:
        if c not in cycles[i]:
            cycles[i][c] = 0

for i in range(7):
    plt.figure(i)
    l = cycles[i].items()
    l.sort()
    keys = map(lambda s: str(s[0]), l)
    values = map(lambda s: s[1], l)
    plt.ylabel("Cycles")
    plt.xlabel("Frequency")
    gs = map(str, transitive_groups[i].gens())
    
    plt.title("Group generated by " + ", ". join(gs))
    plt.barh(keys, values)
    plt.show()
